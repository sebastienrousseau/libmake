name: 🧪 Release

env:
  PROJECT_NAME: libmake

on: [push, pull_request]

jobs:
  dist:
    name: Dist
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # don't fail other jobs if one fails
      matrix:
        build: [x86_64-linux, x86_64-macos, aarch64-macos, x86_64-windows] #, x86_64-win-gnu, win32-msvc aarch64-linux,
        include:
          - build: x86_64-linux
            os: ubuntu-20.04
            rust: stable
            target: x86_64-unknown-linux-gnu
            cross: false
          - build: x86_64-macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
            cross: false
          - build: x86_64-windows
            os: windows-2019
            rust: stable
            target: x86_64-pc-windows-msvc
            cross: false
          - build: aarch64-macos
            os: macos-latest
            rust: stable
            target: aarch64-apple-darwin

    steps:
      # Checkout the source code
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      # Install Rust toolchain
      - name: Install ${{ matrix.rust }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true

      # Install OpenSSL
      - name: Install OpenSSL
        if: matrix.build == 'aarch64-linux'
        run: sudo apt-get install libssl-dev pkg-config

      # Build the library
      - name: Build release library
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --release --target ${{ matrix.target }} --package libmake

      # Copy the library to the dist folder
      - name: Copy library to dist
        run: |
          mkdir -p dist/${{ matrix.target }}
          cp target/${{ matrix.target }}/release/liblibmake.rlib dist/${{ matrix.target }}

      # Upload the library as an artifact
      - uses: actions/upload-artifact@v2.2.4
        with:
          name: libs-${{ matrix.build }}
          path: dist

      # Update the version number based on the Cargo.toml file
      - name: Update version number
        id: update-version
        run: |
          NEW_VERSION=$(grep version Cargo.toml | sed -n 2p | cut -d '"' -f 2)
          echo "::set-output name=VERSION::$NEW_VERSION"
        shell: bash

      # Generate the changelog based on the git log
      - name: Generate Changelog
        run: |
          # Set path to changelog file
          changelog_file="${{ github.workspace }}/CHANGELOG.md"

          # Get version from Cargo.toml
          version=$(grep version Cargo.toml | sed -n 2p | cut -d '"' -f 2)

          # Append version information to changelog
          echo "## Release v${version} - $(date +'%Y-%m-%d')" >> "${changelog_file}"

          # Copy content of template file to changelog
          cat TEMPLATE.md >> "${changelog_file}"

          # Append git log to changelog
          echo "$(git log --pretty=format:'%s' --reverse HEAD)" >> "${changelog_file}"

          # Append empty line to changelog
          echo "" >> "${changelog_file}"

          # Append artifact links to changelog
          echo "## Artifacts 🎁" >> "${changelog_file}"
          for filename in dist/*; do
            link="$(basename "${filename}")"
            echo "* [${link}](${{ github.server_url }}/${{ github.repository }}/releases/download/v${{ steps.update-version.outputs.VERSION }}/${link})" >> "${changelog_file}"
          done
        shell: bash

      # Create the release on GitHub Releases
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: vv${{ steps.update-version.outputs.VERSION }}
          release_name: LibMake v${{ steps.update-version.outputs.VERSION }}
          body_path: ${{ github.workspace }}/CHANGELOG.md
          draft: true
          prerelease: false
