name: Build
on:
  pull_request:
  push:
    branches:
      - feat/*
  # you can enable a schedule to build
  # schedule:
  # - cron: '00 01 * * *'

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    strategy:
      fail-fast: false
      matrix:
        target:
          # Linux targets 🐧
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - arm-unknown-linux-gnueabi
          - armv7-unknown-linux-gnueabihf
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          # macOS targets 🍎
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - armv7-apple-ios
          - armv7s-apple-ios
          - aarch64-apple-ios
          - x86_64-apple-ios
          - aarch64-apple-tvos
          - x86_64-apple-tvos
          # Windows targets 🖥️
          - i686-pc-windows-msvc # 32-bit Windows
          - x86_64-pc-windows-msvc # 64-bit Windows
          - i686-pc-windows-gnu # 32-bit Windows
          - x86_64-pc-windows-gnu # 64-bit Windows
          #FreeBSD targets 🐬
          - x86_64-unknown-freebsd
          # Android targets 🤖
          - armv7-linux-androideabi
          - aarch64-linux-android
          - i686-linux-android
          - x86_64-linux-android

        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

        rust: [stable]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install cargo-hack
        uses: taiki-e/install-action@cargo-hack

      - name: Run xtask powerset test
        uses: actions-rs/cargo@v1
        with:
          command: xtask
          args: powerset


  coverage:
    name: Coverage
    strategy:
      fail-fast: false
      matrix:
        target:
          # Linux targets 🐧
          - x86_64-unknown-linux-gnu

        os:
          - ubuntu-latest

        rust: [stable]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: llvm-tools-preview

      - uses: Swatinem/rust-cache@v1

      - name: Download grcov
        run: |
          mkdir -p "${HOME}/.local/bin"
          curl -sL https://github.com/mozilla/grcov/releases/download/v0.8.13/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf - -C "${HOME}/.local/bin"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Run xtask coverage
        uses: actions-rs/cargo@v1
        with:
          command: xtask
          args: coverage

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          files: coverage/*.lcov

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      # - name: Run cargo fmt
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: fmt
      #     args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features --release -- -D warnings