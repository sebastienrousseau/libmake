name: 🧪 Publish

env:
  PROJECT_NAME: libmake

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  publish:
    name: Publish library
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        id: checkout-sources
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build release library
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --release --target ${{ matrix.target }} --package libmake

      - name: Package the binaries
        run: |
          # Create a directory for the binaries
          mkdir -p artifacts

          # For each target, build the binary and package it in a tar.gz file
          for target in ${{ matrix.targets }}; do
            # Build the binary
            cargo build --release --target $target --package libmake

            # Package the binary in a tar.gz file
            tar czf artifacts/${target}.tar.gz -C target/release .
          done

      - name: Upload the artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: artifacts

      - name: Update the version number
        id: update-version
        run: |
          # Get the version number from Cargo.toml
          version=$(grep version Cargo.toml | sed -n 2p | cut -d '"' -f 2)

          # Set the output variable
          echo "::set-output name=VERSION::$version"
          shell: bash

      - name: Generate the changelog
        run: |
          # Set the path to the changelog file
          changelog_file="${{ github.workspace }}/CHANGELOG.md"

          # Get the version from Cargo.toml
          version=$(grep version Cargo.toml | sed -n 2p | cut -d '"' -f 2)

          # Append version information to the changelog
          echo "## Release v${version} - $(date +'%Y-%m-%d')" >> "${changelog_file}"

          # Copy content of template file to changelog
          cat TEMPLATE.md >> "${changelog_file}"

          # Append git log to changelog
          echo "$(git log --pretty=format:'%s' --reverse HEAD)" >> "${changelog_file}"

          # Append empty line to changelog
          echo "" >> "${changelog_file}"

          # Append artifact links to changelog
          echo "## Artifacts 🎁" >> "${changelog_file}"
          for artifact in artifacts/*; do
            link="$(basename "${artifact}")"
            echo "* [${link}](${{ github.server_url }}/${{ github.repository }}/releases/download/v${{ steps.update-version.outputs.VERSION }}/${link})" >> "${changelog_file}"
          done
          shell: bash

      - name: Create the release on GitHub Releases
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: vv${{ steps.update-version.outputs.VERSION }}
          release_name: LibMake v${{ steps.update-version.outputs.VERSION }}
          body_path: ${{ github.workspace }}/CHANGELOG.md
          draft: true
          prerelease: false
