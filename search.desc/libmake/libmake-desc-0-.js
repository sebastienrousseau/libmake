searchState.loadedDescShard("libmake", 0, "<code>LibMake</code>\nThe <code>args</code> module contains functions for processing …\nThe <code>cli</code> module contains functions for processing …\nExtracts a parameter from a <code>Matches</code> object.\nMacro to simplify the match logic for file generation.\nThe <code>generator</code> module contains functions for generating the …\nThe <code>generators</code> module contains functions for generating …\nThe <code>interface</code> module contains functions for displaying the …\nA macro for generating ASCII art from text.\n<code>macro_check_directory</code> Macro\n<code>macro_cleanup_directories</code> Macro\n<code>macro_create_directories</code> Macro\nExecutes a shell command and logs the start, completion, …\nAttempts to generate file templates from the given …\nAttempts to generate file templates from command-line …\nAttempts to generate file templates from a configuration …\nAttempts to generate file templates from a CSV file.\nAttempts to generate file templates from a INI file.\nAttempts to generate file templates from a JSON file.\nAttempts to generate file templates from a TOML file.\nAttempts to generate file templates from a YAML file.\nMacro to generate a function that retrieves a field value …\nCustom logging macro for various log levels and formats.\nReplaces placeholders in a given line with corresponding …\nThe <code>macros</code> module contains functions for generating macros.\nThe <code>models</code> module contains the models for the library.\nInitializes the logger with a file logger and a terminal …\nThe <code>utilities</code> module contains utility functions for the …\nThe <code>utils</code> module contains a function for reading a CSV …\nExtracts the parameters for manual generation from command …\nProcesses the command line arguments provided to the …\nValidates the manual generation parameters.\nConstructs the command-line interface for the application …\nCreates an argument based on provided information.\nCopies a template file to the output directory and …\nCreates the template folder and downloads necessary …\nGenerates files for a new Rust project based on given …\nGenerates files for a new Rust project based on a …\nThe <code>args</code> module contains functionality for parsing …\nThe <code>ascii</code> module contains functionality for generating …\nThe <code>csv</code> module contains functionality for parsing CSV …\nThe <code>ini</code> module contains functionality for parsing INI …\nThe <code>json</code> module contains functionality for parsing JSON …\nThe <code>toml</code> module contains functionality for parsing TOML …\nThe <code>yaml</code> module contains functionality for parsing YAML …\nGenerates files for a new Rust project based on command …\nGenerates ASCII art from the given text using the standard …\nLoads the standard FIGfont.\nGenerates files for a new Rust project based on a CSV file.\nGenerates files for a new Rust project based on an INI …\nGenerates files for a new Rust project based on a JSON …\nGenerates files for a new Rust project based on a TOML …\nGenerates files for a new Rust project based on a YAML …\nReplaces placeholders in a template file with values from …\nA macro for generating ASCII art from text.\nThe <code>directory_macros</code> module contains macros related to …\nThe <code>file_macros</code> module contains macros related to file …\nThe <code>generator_macros</code> module contains macros related to …\nThe <code>log_macros</code> module contains macros related to logging …\nThe <code>utility_macros</code> module contains utility macros for …\nThe <code>ascii_art_error</code> module contains the <code>AsciiArtError</code> type …\nThe <code>model_params</code> module contains the <code>FileGenerationParams</code> …\nError type for ASCII art generation failures.\nRepresents a failure to convert text to ASCII art.\nRepresents a failure to load the FIGfont.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStructure for holding the parameters for generating the …\nThe author of the project (optional).\nThe build command to be used for building the project …\nThe categories that the project belongs to (optional).\nCreates a default instance with default values for all …\nA short description of the project (optional).\nThe documentation URL of the project (optional).\nThe edition of the project (optional).\nThe email address of the author (optional).\nReturns the argument unchanged.\nParses the command line arguments and returns a new …\nThe homepage of the project (optional).\nCalls <code>U::from(self)</code>.\nKeywords that describe the project (optional).\nThe license under which the project is released (optional).\nThe name of the project (optional).\nParses the command line arguments and returns a new …\nThe output directory where the project files will be …\nThe name of the readme file (optional).\nThe URL of the project’s repository (optional).\nThe minimum Rust version required by the project …\nThe initial version of the project (optional).\nThe website of the project (optional).\nThe <code>directory</code> module contains functions related to …\nThe <code>uuid</code> module contains functions related to generating …\nCleans up the directory at the given path.\nCreates a new directory at the given path.\nEnsures a directory exists, creating it if necessary.\nMoves the output directory to the public directory.\nTruncates a path to only have a set number of path …\nGenerates a unique string.\nCreates a directory at the specified path.\nRetrieves a specific field’s value from a configuration …\nReads a CSV file at the given file path and returns the …\nReads a file and deserializes its content using the …\nReads a file and deserializes its content using the …\nReads a file and deserializes its content using the …")